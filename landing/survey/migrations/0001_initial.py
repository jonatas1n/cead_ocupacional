# Generated by Django 3.2.12 on 2022-10-30 02:07

from django.db import migrations, models
import django.db.models.deletion
import wagtail.core.blocks
import wagtail.core.fields
import wagtailmetadata.models
import wagtailstreamforms.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailimages', '0023_add_choose_permissions'),
        ('wagtailcore', '0066_collection_management_permissions'),
        ('wagtailstreamforms', '0002_form_site'),
    ]

    operations = [
        migrations.CreateModel(
            name='SurveyPageIndex',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('surveys', wagtail.core.fields.StreamField([('form', wagtail.core.blocks.StructBlock([('form', wagtailstreamforms.blocks.FormChooserBlock()), ('form_action', wagtail.core.blocks.CharBlock(help_text='The form post action. "" or "." for the current page or a url', required=False)), ('form_reference', wagtailstreamforms.blocks.InfoBlock(help_text='This form will be given a unique reference once saved', required=False))]))], blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='SurveyPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('date', models.DateField()),
                ('hour', models.TimeField()),
                ('search_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Search image')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Data de nascimento')),
                ('cnpj', models.CharField(blank=True, max_length=30, null=True, verbose_name='CNPJ')),
                ('contract_type', models.CharField(blank=True, max_length=255, null=True, verbose_name='Tipo de contrato')),
                ('cpf', models.CharField(blank=True, max_length=11, null=True, verbose_name='CPF')),
                ('email', models.CharField(blank=True, max_length=255, null=True, verbose_name='E-mail da empresa')),
                ('exam_type', models.CharField(blank=True, max_length=255, null=True, verbose_name='Tipo de exame')),
                ('function', models.CharField(blank=True, max_length=255, null=True, verbose_name='Função')),
                ('name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nome')),
                ('phone', models.CharField(blank=True, max_length=255, null=True, verbose_name='Telefone')),
                ('rg', models.CharField(blank=True, max_length=255, null=True, verbose_name='RG')),
                ('social_reason', models.CharField(blank=True, max_length=255, null=True, verbose_name='Razão Social')),
                ('toxicologic', models.CharField(blank=True, max_length=3, null=True, verbose_name='Toxicológico?')),
                ('rac_form', wagtail.core.fields.StreamField([('rac_forms', wagtail.core.blocks.ChoiceBlock(choices=[('rac_1', 'RAC 1'), ('rac_2', 'RAC 2'), ('rac_3', 'RAC 3'), ('rac_4', 'RAC 4'), ('rac_5', 'RAC 5'), ('rac_6', 'RAC 6'), ('rac_7', 'RAC 7'), ('rac_8', 'RAC 8'), ('rac_9', 'RAC 9'), ('rac_10', 'RAC 10'), ('rac_11', 'RAC 11'), ('rac_12', 'RAC 12')], label='Formulários RAC'))], blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtailmetadata.models.WagtailImageMetadataMixin, 'wagtailcore.page', models.Model),
        ),
    ]
